import {
  Jomhuria,
  Oleo_Script,
  PT_Serif,
  Smooch,
  Nanum_Myeongjo,
} from 'next/font/google';
import localFont from 'next/font/local';

import '../styles/globals.css';
import { CONST } from './_lib/constants';

import type { Metadata } from 'next';

const jomhuria = Jomhuria({
  subsets: ['latin'],
  weight: ['400'],
  variable: '--font-jomhuria',
  display: 'swap',
  fallback: ['serif'],
  style: ['normal'],
});
const smooch = Smooch({
  subsets: ['latin'],
  weight: ['400'],
  variable: '--font-smooch',
  display: 'swap',
  fallback: ['serif'],
  style: ['normal'],
});

const oleoScript = Oleo_Script({
  subsets: ['latin'],
  weight: ['400', '700'],
  variable: '--font-oleo-script',
  display: 'swap',
  fallback: ['serif'],
  style: ['normal'],
});

const ptSerif = PT_Serif({
  subsets: ['latin'],
  weight: ['400', '700'],
  variable: '--font-pt-serif',
  display: 'swap',
  fallback: ['Pretendard', 'Malgun Gothic', 'sans-serif'],
  style: ['normal', 'italic'],
});

const nanumMyeongjo = Nanum_Myeongjo({
  subsets: ['latin'],
  weight: ['400', '700'],
  variable: '--font-nanum-myeongjo',
  display: 'swap',
  fallback: ['Pretendard', 'Malgun Gothic', 'sans-serif'],
  style: ['normal'],
});

const pretendard = localFont({
  src: [
    {
      path: './fonts/Pretendard-Regular.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/Pretendard-Bold.woff2',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: '--font-pretendard',
  display: 'swap',
  fallback: ['Malgun Gothic', 'sans-serif'],
});

const courgette = localFont({
  src: [
    {
      path: './fonts/Courgette-Regular.woff',
      weight: '400',
      style: 'normal',
    },
  ],
  variable: '--font-courgette-regular',
  display: 'swap',
  fallback: ['sans-serif'],
});

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

export const metadata: Metadata = {
  title: CONST.TITLE.SITE_TITLE,
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${jomhuria.variable} ${smooch.variable} ${oleoScript.variable} ${ptSerif.variable} ${pretendard.variable} ${nanumMyeongjo.variable} ${courgette.variable}`}
        // className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
